@*@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")*@
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div>
    <div class="input-group form-group">
        <span class="input-group-addon">y=</span>
        <input type="text" id="expression" class="form-control" />
    </div>
    <button class="btn btn-success" style="float:right;" onclick="request()">Построить график <i class="fa fa-pencil"></i></button>
    <br />
    <hr />
    <div class="graph-panel row">
        <canvas id="canvas" width="600" height="600"></canvas>
    </div>
</div>

@Scripts.Render("~/scripts/jquery-2.2.0.min.js")
@Scripts.Render("~/scripts/bootstrap.min.js")
<script>
    var points = new Array();
    var xShift = 15.0;
    var yShift = 15.0;
    var dimention = 20.0;

    function request() {
        var exp = document.getElementById('expression').value;

        //var s = { 'expression': exp, 'widht': canvas.widht, 'height': canvas.height, 'dimention': dimention };
        var s = { 'expression': exp };
        $.ajax({
            url: '/Graph/Plot',
            method: 'POST',
            data: JSON.stringify(s),
            contentType: 'application/json; charset=utf-8',
            dataType: "json",
            success: function (data) {

                points = $.map(data, function (value, index) {
                    return [value];
                });
                console.log(points);

                var drawingCanvas = document.getElementById('canvas');
                if (drawingCanvas && drawingCanvas.getContext) {
                    var context = drawingCanvas.getContext('2d');

                    context.clearRect(0, 0, canvas.width, canvas.height);
                    context.strokeStyle = "#000";

                    context.beginPath();

                    var i = 0;

                    context.moveTo((points[i] + xShift) * dimention, (-points[i + 1] + yShift) * dimention);
                    i += 2;
                    while (i < points.length) {


                        if (-points[i + 1] + yShift >= 0 && -points[i + 1] + yShift <= canvas.height
                         && points[i] + xShift >= 0 && points[i] + xShift <= canvas.width) {

                            console.log(i + " " + points[i] + " " + points[i + 1]);
                            
                            //context.fillRect((points[i] + xShift)*dimention,(-points[i + 1] + yShift)*dimention,1,1);
                            context.lineTo((points[i] + xShift+0.001)*dimention, (-points[i + 1] + yShift+0.001)*dimention)
                        }else
                            console.log(i + " " + points[i] + " " + points[i + 1] + " bad");
                        i += 2;

                    }
                    context.stroke();
                }
            },
        });
    }


</script>


